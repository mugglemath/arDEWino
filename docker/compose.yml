name: arDEWino-dev-template

services:
  dewdrop-go:
    build:
      context: ..
      dockerfile: docker/dewdrop-go/Dockerfile.dewdrop-go
    # env_file:
    #     - ../rust/arDEWino-rs/.env
    volumes:
      - ../go/dewdrop-go/cmd:/go/src/app/cmd  # bind mount for live code updates
      - ../go/dewdrop-go/internal:/go/src/app/internal
      - ../go/dewdrop-go/pkg:/go/src/app/pkg
    environment:
    # example environment variables
        # INTERVAL is how often, in seconds, arDEWino-rs requests data from the Arduino
        # the Arduino itself keeps a simple moving average of readings over 480 seconds
        # set INTERVAL to how many data points you want in your dashboard (i.e. 60/hr)
      - INTERVAL=60
      - MODE=wifi # can also be 'usb'
      - ARDUINO_PORT=/dev/ttyUSB0
      - ARDUINO_IP=http://10.0.0.123
      - GET_URL=http://go-dew:5000/weather/outdoor-dewpoint
      - POST_URL_SENSOR_FEED=http://go-dew:5000/arduino/sensor-feed
    depends_on:
        - go-dew
    restart: unless-stopped

  go-dew:
    # image: go-dew:${VERSION} # use for version tagging
    build:
      context: ..
      dockerfile: docker/go-dew/Dockerfile.go-dew
    env_file:
        - ../go/go-dew/.env
    # volumes:
    #   - ../go/go-dew/cmd:/go/src/app/cmd                     # bind mount for live code updates
    #   - ../go/go-dew/internal:/go/src/app/internal
    #   - ../go/go-dew/mocks:/go/src/app/mocks
    # environment:
    #   # example environment variables
    #   # must have either {LATITUDE, LONGITUDE} or {OFFICE, GRID_X, GRID_Y}
    #   - LATITUDE=40.73
    #   - LONGITUDE=-73.95
    #   - OFFICE=ABC
    #   - GRID_X=111
    #   - GRID_Y=22
    #   - NWS_USER_AGENT=can-be-any-string
    #   - DISCORD_SENSOR_FEED_WEBHOOK_URL=https://discord.com/api/webhooks/...
    #   - DISCORD_WINDOW_ALERT_WEBHOOK_URL=https://discord.com/api/webhooks/...
    #   - DISCORD_HUMIDITY_ALERT_WEBHOOK_URL=https://discord.com/api/webhooks/...
    #   - DISCORD_DEBUG_WEBHOOK_URL=https://discord.com/api/webhooks/...
    #   - GIN_MODE=debug
    depends_on:
        - postgres
    expose:
        - '5000'
    restart: unless-stopped

  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: timescale_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pw
      POSTGRES_DB: db
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./timescale/init.sql:/docker-entrypoint-initdb.d/init.sql

  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - GF_SERVER_ROOT_URL=http://grafana.server/
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
    ports:
      - '3000:3000'
    volumes:
      - grafana_storage:/var/lib/grafana

volumes:
  postgres_data:
  grafana_storage:

# deprecated
# ardewino-rs:
  #   # image: ardewino-rs:${VERSION} # use for version tagging
  #   build:
  #     context: ..
  #     dockerfile: docker/ardewino-rs/Dockerfile.ardewino-rs
  #   env_file:
  #       - ../rust/arDEWino-rs/.env
  #   depends_on:
  #     - go-dew
  #   # volumes:
  #   #   - ../rust/arDEWino-rs/src:/usr/src/app/src             # bind mount for live code updates
  #   environment:
  #       # INTERVAL is how often, in seconds, arDEWino-rs requests data from the Arduino
  #       # the Arduino itself keeps a simple moving average of readings over 480 seconds
  #       # set INTERVAL to how many data points you want in your dashboard (i.e. 60/hr)
  #       - INTERVAL=60
  #   # environment:
  #   # # example environment variables
  #   #   - ARDUINO_PORT=/dev/ttyUSB0
  #   #   - ARDUINO_IP=http://10.0.0.123
  #   #   - GET_URL=http://go-dew:5000/weather/outdoor-dewpoint
  #   #   - POST_URL_SENSOR_FEED=http://go-dew:5000/arduino/sensor-feed
  #   restart: unless-stopped